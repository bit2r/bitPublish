[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "bitPublish를 이용하여 한글 책 조판하기",
    "section": "",
    "text": "머리말\nR은 통계적인 계산과 시각화에 많은 장점을 가지고 있는 도구이다. 개인적으로는 S-PLUS의 경험을 시작으로 해서 R이라는 아주 친한 친구를 알게 된 것을 대단한 행운으로 여기고 있다. R에대한깊이가깊다고자신할수는없지만, 함께해 온 날은 결코 짧지 않다. 1993년 여름, S-PLUS를 통해 S 언어를 처음 접한 후 매우 강한 인상을 받았다. 그리고 2000년대 초 어느 서점에서 책을 뒤적이다가 단 몇 줄이지만 S 언어의 클론이라는 존재로 R이라는 것이 있음을 알고 전율을 느꼈던 순간을 잊지 못한다. 그리고 아직 까지도 통계적인 계산과 시각화에 R보다 더 좋은 도구가 없다는 생각에는 변함이 없다.\n필자는 2005년 “R 그래픽스”를 통해서 R을 이용해서 여러 가지 통계적인 그래프를 그리는 방법과 원리를 제시했고, 2010년 “R 프로그래밍”을 통해서는 R로 데이터를 다루고 프로그래밍을 하는 방법을 설명하였다. 그리고 이제 R을 이용해서 통계학의 기본적인 원리를 이해할 수 있도록 예제 중심의 통계학 기본서를 내놓게 되었다. 늘 그렇듯 책을 마 무리하는 시점에서는 항상 부족함을 느낀다. 그러나 딱딱한 수리적인 통계 이론이 아닌 R을 이용해서 쉽게 통계학의 원리를 터득할 수 있는 예제를 표현하려고 노력한 것에 대 해서는 인정해 주었으면 한다.\n기타 등등 블라블라"
  },
  {
    "objectID": "chap_exams.html#데이터",
    "href": "chap_exams.html#데이터",
    "title": "1  예제를 위한 장",
    "section": "1.1 데이터",
    "text": "1.1 데이터\n데이터(data)를 국어사전에서 찾으면 다음과 같은 세 가지의 뜻을 가지고 있다.\n\n이론을 세우는 데 기초가 되는 사실, 또는 바탕이 되는 자료.\n관찰이나 실험, 조사로 얻은 사실이나 정보.\n\n이 세 가지를 정리하면 데이터는 ``이론을 세우기 위해 관찰이나 실험, 조사를 통해서 얻은 정보를 컴퓨터가 처리하기 위한 형태로 만든 정보”로 생각해 볼 수 있다. 이 절에서는 데이터의 정의에서 컴퓨터가 처리하기 위한 형태로 된 정보를 R이 처리하기 위한 형태로 된 정보로 간주할 것이다. 또한 위키피디아(Wikipedia)에서는 데이터를 ``항목(items)의 집합(set)에 속하는 질적(qualitative) 또는 양적(quantitative) 변수(variables)의 값(values)”으로 정의하고 있다. 여기서 항목의 집합이란 관심이 있는 객체의 집합을 의미하며, 변수는 항목의 특성을 의미한다. 국어사전에서의 데이터 정의는 데이터의 목적성과 취득 방법 및 형태에 의한 것이라면, 위키피디아에서의 정의는 데이터의 속성에 대한 것이다.\n국어사전에서의 정의를 기준으로 R을 이용한 통계분석을 위해서는 몇 단계의 과정이 필요하다.\n첫째로, 사건이나 사실 등의 현상을 관찰하여 일정한 규칙에 의한 체계적인 단위의 수치를 부여하는 측정이 필요하다. 측정을 위해서는 자, 저울, 속도계, 온도계, 혈압계와 같은 측정을 위한 도구가 필요할 수도 있으며, 이를 통해서 측정한 현상을 수량화한다. 이처럼 사건이나 사실 등의 현상을 수량화하기 위해서 그 현상에 숫자를 부여한 것을 척도라 한다.\n이러한 일련의 과정에 오류가 발생할 수 있다. 측정하는 과정에서 발생할 수 있는 측정의 오류, 측정된 값을 데이터로 코딩하는 과정에서의 오기(타)로 인한 오류도 있을 수 있다. 또한 측정하는 저울, 온도계와 같이 측정하는 도구의 정밀도에 따른 오류도 있을 수 있다. 그러므로 올바른 통계분석을 위해서는 분석 단계 이전에 정밀도가 높은 측정도구를 이용하여 정확하게 측정하고, 측정된 값을 정확하게 옮겨서 데이터화하는 것이 필요하다.\n마지막으로 코딩된 데이터를 R의 데이터 객체로 변환하는 방법도 중요하다. 이 작업에서는 적절한 R의 데이터 객체로의 전환이 필요하며, 척도의 적당한 변환도 필요할 수 있다.\n\n1.1.1 측정의 타당도 및 신뢰도\n우수한 측정도구는 다음의 두 가지 조건을 만족해야 한다.\n양궁으로 과녁을 맞히는 예를 R을 이용해서 그려 보자. 다음의 예제를 실행하면 그림 1.1같은 네 가지 종류 플롯을 얻는다. 여기서 가장 이상적인 과녁은 오른쪽 상단의 과녁으로 타당도와 신뢰도가 높음을 알 수 있다.\n\n\n\n\n\n그림 1.1: 타당도와 신뢰도\n\n\n\n\n\n\n1.1.2 척도\n측정된 데이터는 본질적인 내용이 기호나 수량화되어서 변수로 만들어진다. 이 수치화된 변숫값들의 체계를 척도(scale)한다. 척도는 다음처럼 명목척도, 서열척도, 구간척도, 비율척도로 나누어진다.\n\n명목척도(nominal scale, 名目尺度)\n\n분류 목적으로 수치화한 것으로 양적인 의미를 전혀 갖지 않고, 명칭을 대신하는 척도\n예) 성별(1-남자, 2-여자)\n\n서열척도(ordinal scale, 序列尺度)\n\n명목척도와 같은 개념에 추가적으로 서열(순서) 관계의 속성을 갖는 척도\n예) 등급: 1-1등급, 2-2등급, 3-3등급. 크기: 1-대, 2-중, 3-소\n\n\n빈도수를 이용한 계산만 의미가 있는 명목척도는 일반적으로 범주형 데이터로 만들어 진다. 예를 들면 성별이라는 범주형 데이터(categorical data)에서의 남자, 여자와 같은 수준(level)에 대한 도수 및 비율(빈도)을 이용한 분석을 수행할 수 있다. 서열척도 또한 범주형 데이터로 만들어지지만 명목척도와 달리 순서의 의미가 있기 때문에 빈도분석 이외에 중위수 등 순서통계량 기반의 분석을 수행할 수 있다. 구간척도와 비율척도에는 여러 가지의 기술통계 및 추론통계의 방법을 사용할 수 있으며, 우리가 일상생활에서 활용하는 수치 데이터들의 대부분은 비율척도로 이루어져 있다.\n\n예제 1.1 (척도의 표현) 네 가지의 척도를 R의 데이터 객체로 표현해 보자.\n\n명목척도에 대한 예제다. 예제의 fruits는 세 가지 과일 이름을 갖는 범주형 데이터로 R의 factor() 함수로 만들 수 있다. 이 함수는 factor라는, 명목척도를 표현하는 데이터 객체를 생성한다. 데이터 객체인 factor는 table() 함수를 이용해서 도수와 비율을 구할 수 있다.\n명목척도를 표현하는 factor 객체는 apple, banana, pear와 같이 과일 이름으로 표현되지만 R의 내부에서는 1, 2, 3과 같이 인식된다. 그래서 as.numeric() 함수를 이용하면 apple, pear, pear, apple, banana가 1, 3, 3, 1, 2와 같이 인식됨을 알 수 있다. 여기서 각 수준을 인식하는 1, 2, 3은 비록 수치형이지만 각 수준의 크기가 아니라 몇 번째 수준인가를 나타내는 지시자다.\n\nfruits &lt;- c(\"apple\", \"pear\", \"pear\", \"apple\", \"banana\")\nfruits &lt;- factor(fruits)\nfruits\n\n[1] apple  pear   pear   apple  banana\nLevels: apple banana pear\n\ntable(fruits)                               # 도수분포\n\nfruits\n apple banana   pear \n     2      1      2 \n\ntable(fruits) / sum(table(fruits)) * 100    # 비율 (백분율)\n\nfruits\n apple banana   pear \n    40     20     40 \n\nas.numeric(fruits)                          # 수준 인덱스\n\n[1] 1 3 3 1 2\n\n\n구간척도와 비율척도를 표현해 보자. 두 척도에서의 차이점은 절대 0의 여부에 따르기 때문에 표현하는 방법은 동일할 뿐, 개념적으로 절대 0을 갖느냐 갖지 못하느냐의 차이로 구분된다. 다음은 섭씨온도 값을 표현한 것과 절대온도 값을 표현한 예제다. 그런데 사실 두 사례는 동일한 온도값이다. 섭씨온도에 273.15를 더해서 절대온도로 변환하였기 때문이다.\n\n\n1.1.3 도수분포표\n도수분포표(frequency table)는 데이터의 분포 형태를 알아보기 위해서, 데이터를 구간별로 나누어 각 구간에 속하는 관찰치의 개수를 표로 나타낸 것이다. 각 구간을 계급(class)이라 하고 계급에 속한 관찰치의 개수를 도수(frequency)라 한다.\n데이터가 \\(x_1, x_2, x_3, \\cdots, x_n\\)일 때, 도수분포표는 다음의 단계적 방법으로 만든다.\n\n데이터의 개수 \\(n\\)을 구한다.\n데이터의 최댓값 \\(\\operatorname{Max}\\)와 최솟값 \\(\\operatorname{Min}\\)을 구한다. 데이터를 오름차순으로 정렬하여 순서통계량 \\(x_{(1)}, x_{(2)}, x_{(3)}, \\cdots, x_{(n)}\\)을 만들면 최댓값 \\(\\operatorname{Max}\\)와 최솟값 \\(\\operatorname{Min}\\)은 각각 \\(x_{(n)}\\)과 \\(x_{(1)}\\)이다.\n계급의 개수 계산 (Sturges 공식을 이용한 계급의 개수 계산) \\[\nn_{\\text {class }}=1+\\frac{\\log _n}{\\log _2} \\text { 근처의 정수 }\n\\] 데이터의 개수가 너무 적으면 데이터의 분포에 대한 정보를 많이 잃게 되며, 너무 많으면 데이터의 전반적인 형태를 파악하기 어렵다.\n데이터의 최소단위(Unit) \\(u\\)를 구한다. 예를 들어 168.2,175.3,171.2 등의 최소단위는 0.1이다.\n누적도수, 상대도수, 누적상대도수 등을 구한다.\n\n\n누적도수: 각 계급별로 누적된 도수로 마지막 계급의 누적도수는 \\(n\\)이 된다. \\(k\\)번째 계급의 누적도수: \\[F_k=\\sum_{i=1}^k f_i\\]\n상대도수: 계급도수를 데이터 개수로 나눈 비율로 전체 데이터 중에서 해당계 급이 차지하는 비율을 의미한다. 상대도수의 합은 1이 된다. \\[\n\\begin{aligned}\n& f_i^R=\\frac{f_i}{n}, i=1,2, \\cdots, n_{\\text {class }} \\\\\n& \\sum_{i=1}^{n_{\\text {class }}} f_i^R=\\frac{f_1}{n}+\\frac{f_2}{n}+\\cdots+\\frac{f_{n_{\\text {class }}}}{n}=\\sum_{i=1}^{n_{\\text {class }}} f_i \\times \\frac{1}{n}=n \\times \\frac{1}{n}=1\n\\end{aligned}\n\\]\n누적상대도수: 각 계급에서의 누적된 상대도수의 값으로 누적 비율을 의미한다. 마지막 계급에서는 그 값이 1이 된다. \\(k\\)번째 계급의 누적상대도수: \\[\nC F_k=\\sum_{i=1}^k f_i^R=\\frac{F_k}{n}\n\\]\n\n\n\n클래스 상속과 ordered factor\n상속(inheritance)은 부모 클래스의 내용(속성과 메소드)을 자식 클래스가 물려받는 것으로 객체지향형 언어의 특징이다. 예를 들면, 자동차라는 부모 클래스를 상속받아 세단과 SUV라는 자식 클래스를 생성하면, 자식 클래스인 세단과 SUV는 부모 클래스인 자동차가 갖고 있는 속성인 ‘핸들’, ‘브레이크’, ‘바퀴’와 같은 속성과 ‘엑셀을 밟다’, ‘핸들을 돌리다’, ‘브레이크를 밟다’와 같은 메소드를 사용할 수 있다. 세단은 ‘가벼운 중량’, ‘낮은 차체’ 속성을, SUV는 ‘무거운 중량’, ‘높은 차체’ 속성을 추가로 만들어서 부모 클래스로부터 자식 클래스를 정의한다.\nR에서도 클래스 상속의 개념이 있다. ordered() 함수는 ’factor’라는 부모 클래스를 상속하여 ’ordered’라는 자식 클래스를 만든다. 그러므로 ’rdered’는 factor의 내용에, 수준의 순서가 서열로 처리되는 특성이 추가된 클래스다. 속성 중 class의 값이 “ordered” “factor”인 것은, 부모 클래스인 factor로부터 상속받아 만들어진 ordered 클래스라는 의미다. 오른쪽이 부모 클래스고, 왼쪽이 자식 클래스다.\n\n\n\n\nCP949 인코딩과 fileEncoding 인수\nMS Windows에서는 별도의 설정이 없으면, 텍스트 파일의 한글을 CP949로 인코딩하여 저장한다. 그러므로 MS Windows에서 만들어진 한글이 포함된 텍스트 파일을 읽을 때에는, ‘fileEncoding’ 인수에 “cp949”를 지정해야 한다. 그런데 그림처럼 Excel에서 CSV 파일을 저장할 때, 인코딩을 UTF-8로 설정하면 read.table() 함수에서 fileEncoding 인수로 인코딩을 “cp949”로 지정하지 않아도 된다.\n외산 소프트웨어에서 한글을 문제없이 사용하는 것은 매우 번거롭고 까다롭다. 최선의 방법 중 하나는 한글이 포함된 데이터 파일을 UTF-8 인코딩으로 저장하는 것임을 잊지말자.\n\n\ntidyverse 패키지는 R의 대표적인 패키지로 데이터 분석의 일련과정을 지원하는 여러 유용한 패키지의 모음이다. 그래서 패키지군이라 부르는 게 맞을듯 하다. tidyverse 패키지군을 구성하는 대표적인 패키지에는 dplyr 패키지와 ggplot2 패키지가 있다. dplyr 패키지는 논리적이고 순차적인 문법으로 데이터를 조작하거나 집계하는 패키지며 ggplot2 패키지는 데이터 시각화 패키지다. 우리는 dplyr 패키지를 이용해서 끊김없는 논리적 흐름의 전개로 도수분포표를 계산할 것이다.\n개별 파이프의 목적은 파이프의 직경과 길이에 해당하는 수돗물을 특정 위치까지 이동시키는 것이다. 그리고 순차적인 데이터 처리의 흐름은 그림 1.2처럼 해당 처리를 담당하는 파이프들을 순차적으로 연결한 구조의 파이프라인으로 정의된다.\n\n\n\n\n\n그림 1.2: 파이프와 파이프라인\n\n\n\n\ninput -&gt; process -&gt; output 구조의 단일 파이프를 연결하기 위해서 tidyverse 패키지군의 magrittr 패키지가 파이프 연산자인 %&gt;%를 제공한다. 이 연산자의 역할은 연산자 이전 함수(process)에서의 결과(output)를 다음 함수(process)의 입력(input)으로 전달하는 역할을 수행한다. 결국 이 연산자를 통해서 파이프라인이 만들어지며 input -&gt; process -&gt; output -&gt; input -&gt; process -&gt; output과 같은 구조를 만들 수 있게 된다. 즉, 파이프 연산자 %&gt;%는 파이프라인을 만드는 배관공이라 할 수 있다.\n이러한 이유들로 인해서 파이프 연산자는 특히 dplyr 패키지의 데이터 처리에서 두각을 보였으며, 많은 R 사용자들의 R 스크립트에서 사랑받게되었다. 그래서 이제는 외부(3rd-party) 패키지가 아니라 R 엔진 자체에 파이프 연산자를 포함시켰고, |&gt;로 표현한다.\n\n\n이 책에서는 수리적인 알고리즘의 이해를 위한 작업이 아니라면, 가급적으로 R의 내장 파이프 연산자를 |&gt;를 사용하여 파이프라인 처리를 하겠다. 유용한 기능이기 때문에 적극적으로 습득하는 것을 추천한다.\n\n\nstate.region은 내장 데이터셋으로 미국 50개주를 ‘Northeast’, ‘South’, ‘North Central’, `West’라는 4개 권역으로 분류한 범주형 데이터다. 이 데이터를 dplyr 패키지의 함수와 파이프 연산자를 이용해서 도수분포표를 만들어보겠다.\n먼저 head() 함수로 데이터의 앞부분 몇 건을 조회해 본다.\n\nhead(state.region)\n\n[1] South West  West  South West  West \nLevels: Northeast South North Central West\n\n\n대략 데이터의 구조가 이해되었으니, tidyverse 패키지를 불러들여서 작업을 위한 환경을 구성한다. library() 함수로 tidyverse 패키지를 불러오면 dplyr, ggplot2를 비롯한 몇 개의 패키지가 자동으로 로드된다.\n\nlibrary(tidyverse)\n\n다음은 도수분포표를 생성하기 위한 dplyr 패키지 함수와 파이프 연산자를 이용한 스크립트다.\n\nstate.region |&gt; \n  data.frame() |&gt;   \n  count(권역 = state.region, name = \"도수\") |&gt;       \n  mutate(누적도수 = cumsum(도수)) |&gt;\n  mutate(상대도수 = 도수 / sum(도수)) |&gt; \n  mutate(누적상대도수 = cumsum(상대도수))\n\n           권역 도수 누적도수 상대도수 누적상대도수\n1     Northeast    9        9     0.18         0.18\n2         South   16       25     0.32         0.50\n3 North Central   12       37     0.24         0.74\n4          West   13       50     0.26         1.00\n\n\n열거형 도수분포표는 복잡한 수리적인 계산 알고리즘이 필요없다. 논리적인 사고로 데이터 처리 프로세스를 다음처럼 순차적으로 풀어나가면 된다.\n\nfactor를 데이터 프레임 객체로 변환한다.\n\ndata.frame()\n\n집계 대상 변수의 수준(levels)별로 도수를 계산한다.\n\ncount()\n\n\n이 사례에서 중요한 것은 파이프 연산자로 심리스(seamless)1하게 데이터를 처리하는 순차 연산을 구현한다는 것이다.\n\n\n\n\n유충현, 와/과 이상호. 2013. R을 이용한 통계학 이해. 자유아카데미."
  },
  {
    "objectID": "chap_exams.html#footnotes",
    "href": "chap_exams.html#footnotes",
    "title": "1  예제를 위한 장",
    "section": "",
    "text": "뭔가를 연결할 때 마치 원래 하나였던 것처럼 끊김없이 매끄럽게 연결하는 것을 의미한다.↩︎"
  },
  {
    "objectID": "chap_intro_bitpublish.html#quarto-소개",
    "href": "chap_intro_bitpublish.html#quarto-소개",
    "title": "2  bitPublish 소개",
    "section": "2.1 Quarto 소개",
    "text": "2.1 Quarto 소개\n\n2.1.1 Quarto\nQuarto(posit 2023b)는 오픈 소스의 과학 및 기술 출판 시스템으로 다음과 같은 기능을 제공합니다.1\n\nJupyter 노트북, RStudio를 사용하거나 선호하는 편집기로 마크다운 문서를 작성합니다.\nPython, R, Julia 및 Observable을 사용하여 동적 콘텐츠를 만듭니다.\nHTML, PDF, MS Word, ePub 등으로 재현 가능한 프로덕션 품질의 기사, 프리젠테이션, 웹 사이트, 블로그 및 책을 게시합니다.\nPosit Connect, Confluence 또는 기타 게시 시스템에 게시하여 조직 전체에서 지식과 통찰력을 공유합니다.\n방정식, 인용, 상호 참조, 그림 패널, 콜아웃, 고급 레이아웃 등을 포함한 팬독 마크다운을 사용하여 작성합니다.\n\nQuarto(Horst 2022)를 요약하자면 그림 2.1처럼, Quarto 문서를 knitr 또는 jupyter로, 마크다운(Markdown) 문서로 랜더링한 다음 팬독(Pandoc)에 의해 마크다운 문서를 HTML, PDF 또는 Word 문서를 비롯한 여러 출력 포맷으로 변환해주는 시스템입니다.\n\n\n\n\n\n그림 2.1: Quarto 매커니즘, Allison Horst.\n\n\n\n\n\n\n2.1.2 Quarto extensions\nextensions은 Quarto의 동작을 수정하고 확장할 수 있는 방법을 제공하며, 다음과 같은 유형으로 구분합니다.(posit 2023a)\n\n\n\n\n\n\n\n\n영문 유형\n국문 유형\n설명\n\n\n\n\nShortcodes\n단축 코드\n다양한 유형의 콘텐츠를 생성하는 특수 마크다운 지시문. 예를 들어 짧은 코드를 만들어 문서에 트윗이나 동영상을 삽입\n\n\nFilters\n필터\n새로운 전역 동작 또는 새로운 마크다운 렌더링 동작을 도입하기 위한 도구. 예를 들어 출력 접기, 이미지 슬라이더 등의 필터 제작\n\n\nJournal Articles\n저널 기사\n마크다운으로 전문적인 저널 기사를 작성. LaTeX(PDF) 및 HTML 버전을 모두 생성할 수 있음\n\n\nCustom Formats\n맞춤 형식\n문서 옵션, 템플릿, 스타일시트 및 기타 콘텐츠를 함께 묶어 새로운 출력 형식을 생성\n\n\nRevealjs Plugins\nRevealjs 플러그인\nRevealjs로 만든 HTML 프레젠테이션의 기능을 확장\n\n\nProject Types\n프로젝트 유형\n표준 콘텐츠와 옵션을 함께 묶는 새로운 프로젝트 유형을 만들거나, 사용자 지정 HTML 형식으로 웹 사이트 제작\n\n\nStarter Templates\n시작 템플릿\n템플릿과 예제 콘텐츠를 제공하여 사용자가 새 프로젝트를 시작할 수 있도록 지원\n\n\n\n\n\n2.1.3 bitPublish\nbitPublish는 Quarto extensions로 R 기반으로 한글 책을 저작해 줍니다. 또한 한글 책 저작을 위한 예제 콘텐츠를 제공합니다. 그러므로 extensions 분류 상으로는 맞춤 형식, 시작 템플릿으로 분류할 수 있습니다."
  },
  {
    "objectID": "chap_intro_bitpublish.html#bitpublish-소개",
    "href": "chap_intro_bitpublish.html#bitpublish-소개",
    "title": "2  bitPublish 소개",
    "section": "2.2 bitPublish 소개",
    "text": "2.2 bitPublish 소개\nQuarto를 이용해서 책으로 만들 수 있는 포맷에는 HTML, PDF, MS Word, EPUB, AsciiDoc이 있습니다. bitPublish는 이중에서 PDF 포맷의 책을 생성합니다.\n현재 bitPublish의 기본 설정에서는 46배판 판형을, 갖는 영어를 포함한 라틴계열 언어와 한국어, 중국어를 혼용한 책을 저작할 수 있습니다."
  },
  {
    "objectID": "chap_intro_bitpublish.html#조판-설정",
    "href": "chap_intro_bitpublish.html#조판-설정",
    "title": "2  bitPublish 소개",
    "section": "2.3 조판 설정",
    "text": "2.3 조판 설정\n\n2.3.1 페이지 레이아웃\n현재 bitPublish의 기본 페이지 레이아웃 설정은 46배판으로 설계되었습니다. 46배판 판형은 용지의 크기가 188mm \\(\\times\\) 254mm입니다. 이 용지의 크기는 B5 사이즈이고 우리가 일반적으로 프린터 용지로 사용하는 A4 사이즈는 국배판이라하며, 용지의 크기가 210mm \\(\\times\\) 217mm입니다.\n46배판 판형의 레이아웃 설정을 변경하려면, _extensions/bit2r/bitPublish/_extension.yml 파일의 다음 행들을 수정합니다. 이 설정은 LaTeX의 geometry 패키지가 사용하는 레이아웃 설정 파라미터입니다.\n\n      geometry:                            # 4x6 배판 도서를 위한 설정\n        ### 이하 재단선이 없는 조판    \n        # - paper=b5paper\n        - paperheight=257mm\n        - paperwidth=188mm\n        - top=25mm    \n        - headsep=10mm  \n        - bottom=30mm     \n        - footskip=15mm           \n        - left=25mm\n        - right=25mm\n        - centering     \n        ### 이하 재단선을 넣는 조판 \n        # - paper=a4paper\n        # - layoutwidth=190mm\n        # - layoutheight=260mm\n        # - layouthoffset=10mm\n        # - layoutvoffset=18.5mm\n        # - showcrop\n        # - top=20mm\n        # - headsep=10mm\n        # - bottom=30mm\n        # - footskip=15mm\n        # - left=25mm\n        # - right=25mm\n        # - centering    \n\n\n2.3.1.1 A4 용지를 사용하는 경우\n일반적으로 저작을 위해서는 프린터로 출력해서 이상여부를 확인하는 작업을 거치게 됩니다. 대중적으로 사용되는 A4 사이즈의 프린터 용지는 46배판보다 크기 때문에, 출력은 A4 사이즈에 출력하지만 실제로 만들어질 재단선(crop) 마크를 출력해서 46배판 판형을 표시하기도 합니다. 앞의 geometry 패키지의 판형 설정 영역에서 주석으로 처리되는 영역이, A4 용지를 사용하는 경우를 예시한 것입니다.\n\n\n2.3.1.2 A5 용지를 사용하는 경우\n종이 출판을 위해서 원고를 넘길 때, 재단선이 없는 실제 46배판 크기의 결과를 요구하기도 합니다. 이 경우에는 앞의 geometry 패키지의 판형 설정 영역에서 주석처리 되지 않은 영역을 사용합니다.\n여기서 중요한 것은, 국배판 \\(=\\) A4, 46배판 \\(\\approx\\) B5의 관계2라는 점입니다. 그래서 geometry 설정에서 paper 설정이 아니라, paperheight, paperwidth를 사용했습니다.\n그리고 물리적인 용지 크기와 판형의 크기가 동일하기 때문에 재단선 출력을 설정하는 showcrop을 설정하지 않았습니다.\n\n\n2.3.1.3 레이아웃 설정\ngeometry 패키지의 페이지 설정 파라미터는 그림 2.2같습니다. 머리글과 바탕글 위치는 각각 head와 foot입니다. 그러므로 설정 시에는 top보다 headsep이 작아야 하고, bottom보다 footskip이 작아야 합니다. 즉, top 영역 안에 headsep이 포함되고, bottom 영역 안에 footskip이 포함되기 때문입니다.\n출판 저작물을 생성하는 저자는, 현재 bitPublish의 기본 페이지 레이아웃을 참고해서 레이아웃을 정의하기 바랍니다.\n\n\n\n\n\n그림 2.2: geometry 패키지의 레이아웃 설정 파라미터\n\n\n\n\n\n\n\n2.3.2 폰트 설정\nbitPublish는 전자책이 아닌 종이에 출력되는 책의 저작을 목적으로 만들어졌기 때문에, 폰트의 선택에서 TTF(True Type Font)가 아닌 OTF(Open Type Font)를 선택하였습니다.\n\n2.3.2.1 폰트 선정의 기준\n\n출판 시 발생할 라이센스 이슈 제거\n\n모든 폰트를 상업적으로 이용이 가능한 폰트로 선정\nserif3 영어 폰트인 Times New Roman 저작권의 이슈\n\n가독성이 뛰어난 범용적인 세리프체로 영문 에세이와 학위 논문의 표준 폰트로 자리잡았으나\n상업용으로 쓸 땐 저작권 면책 조건을 확인해야 함\n\nsans-serif4 영어 폰트인 Helvetica 저작권의 이슈\n\n대표적인 산세리프 글꼴로 20세기에 널리 쓰였음\n\n\n\n출판 인쇄물의 미적 완성도\n\n가독성, 심미성 등\n\n\n\n\n2.3.2.2 한국어 폰트\n\nserif 폰트:\n\nKoPubWorld바탕체_Pro\n\nsans-serif 폰트:\n\nKoPubWorld돋움체_Pro\n\n\n\n\n2.3.2.3 영어 폰트\n\nserif 폰트:\n\nTimes New Roman 대체 폰트\nSTIX Two Text\n\nsans-serif 폰트:\n\nNimbus Sans L\n\n\n\n\n2.3.2.4 한자 폰트\n\nKoPubWorld돋움체_Pro\n\n\n\n2.3.2.5 Mono space 폰트\n\nmono space 폰트\n\nD2Coding\n\n영어/한국어 모두 동일한 폰트 사용\n영어 mono space와 한국어 mono space를 혼용하면 자간격이 틀어짐\n\n\n\n\n\n2.3.2.6 Math 폰트\n\nSTIX Two Math\n\n\n\n2.3.2.7 R 그래픽스 이미지 폰트\n\n한국어 폰트\n\n나눔스퀘어\n\n영어 폰트\n\nNimbus Sans L\n\n\n\n\n2.3.2.8 주의사항\n모든 폰트는 _extensions/bit2r/bitPublish/fonts 디렉토리에 위치합니다. 그래서 따로 설치할 필요도 없고, 이미 설치된 폰트도 중복으로 위치하게 됩니다. 그리고 KoPubWorld바탕체_Pro와 KoPubWorld돋움체_Pro 폰트를 사용하기 위해서는 한국출판인회의 홈페이지인 https://forms.gle/aQU7b3EoaF53zMKaA에 사용자 정보를 등록 후 무료로 사용하실 수 있습니다. 이 경우에는 https://www.kopus.org/wp-content/uploads/2021/04/서체_라이센스.pdf 페이지의 라이센스를 일독하시기 바랍니다.\n\n\n\n2.3.3 머리글 바닥글\n머리글(header)과 바닥글(footer)는 fancyhdr 패키지를 사용해서 정의하였습니다.\n_extensions/bit2r/bitPublish/_extension.yml 파일에 다음과 같이 설정되어 있습니다.\n\n\\usepackage{fancyhdr}\n\\pagestyle{fancy}\n\n중간 생략\n\n\\fancyhf{}\n\\fancyhead[EL]{\\changesize \\numberfont --- bitPublish를 이용하여}\n\\fancyhead[OR]{\\changesize \\numberfont 한글 책 조판하기 ---}\n\\fancyfoot[EL]{{\\pagefont\\thepage}{\\hskip4mm}{\\changesize \\leftmark}}\n\\fancyfoot[OR]{{\\changesize \\rightmark}{\\hskip4mm}{\\pagefont\\thepage}}\n\n만약에 머리글과 바닥글의 모양을 바꾸려면 직접 LaTeX 스크립트를 수정하면 됩니다. 책의 제목을 바꾸기 위해서는 fancyhead의 EL과 OR을 변경하면 됩니다.\n\n\n2.3.4 글줄 사이\n줄간격, 행간 등으로 부르는 글줄 사이(line spacing)는 1.5로 설정되었습니다. 수정이 필요하다면, _extensions/bit2r/bitPublish/bitPublish.tex 파일의 다음 행을 수정합니다.\n\n%% 줄간격 정의\n\\linespread{1.5}"
  },
  {
    "objectID": "chap_intro_bitpublish.html#bitpublish-서식-이용하기",
    "href": "chap_intro_bitpublish.html#bitpublish-서식-이용하기",
    "title": "2  bitPublish 소개",
    "section": "2.4 bitPublish 서식 이용하기",
    "text": "2.4 bitPublish 서식 이용하기\nbitPublish는 본문에서 예제, 연습문제, 주의, 정보, 인용 등을 표현할 수 있는 여러 LaTeX 서식을 지원합니다. 이 서식은 다음과 같은 구조의 LaTeX 환경(enviroment)으로 제공합니다.\n\n\\begin{enviroment name}[optional argument]{main argument}\n  text of enviroment\n\\end{enviroment name}\n\n또한 다음과 같은 LaTeX 명령(command)으로도 제공합니다.\n\n\\command name[optional argument]{main argument} \n\n\n2.4.1 멀티 아웃 포맷\nbitPublish 서식은 전자출판이 아닌, 종이로 된 서책의 출판을 염두에 둔 것이라서 LaTeX을 기반으로 서식을 정의합니다. 그러나 이 경우에는 종이 서책 출판을 위한 PDF 포맷은 지원하지만 전자책 위한 HTML 포맷을 지원하지 못하는 단점이 있습니다.\nbitPublish 초기 버전에서 대부분의 서식은 LaTeX 출력을 지원하지만, 전자책을 위한 HTML 출력도 동시에 지원하는 멀티 아웃 포맷(multiple output formats)으로 업그레이드하려 합니다.\n\n\n2.4.2 사용자 정의 블록\nbitPublish 서식의 대표적인 것에 커스텀 블록(custom blocks)(Yihui Xie 2022)이 있습니다. 사용자 정의 블록은 보고서나 책의 일부 콘텐츠를 블록으로 정의하여 본문보다 돋보이게 하여 독자가 핵심 포인트를 쉽게 이해할 수 있도록 주목도를 높이는 서식입니다.\n사용자 정의 블록은 팬독의 fenced Div blocks 기능을 사용합니다. 이 기능은 Div 블록을 HTML과 LaTeX 모두로 변환해줍니다.\n다음의 팬독 사용자 정의 블록은,\n\n::: {.verbatim data-latex=\"\"}\nWe show some _verbatim_ text here.\n:::\n\nLaTeX 출력일 경우에는 다음과 같이 변환하고,\n\n\\begin{verbatim}\nWe show some \\emph{verbatim} text here.\n\\end{verbatim}\n\nHTML 출력일 경우에는 다음과 같이 변환해 줍니다.\n\n&lt;div class=\"verbatim\"&gt;\nWe show some &lt;em&gt;verbatim&lt;/em&gt; text here.\n&lt;/div&gt;\n\n\n\n2.4.3 정보 블록\n정보 블록은 멀티 아웃 포맷을 지원하는데, 다음과 같은 네 개의 유형을 지원합니다. 네 개의 유형은 HTML과 LaTeX에서 우주 똑같은 모양은 아니지만, 거의 유사한 모습으로 출력됩니다.\n\n정보\n\ninformation\n\n주의\n\ncaution\n\n경고\n\nwarning\n\n팁\n\ntip\n\n\n멀티 아웃 포맷을 지원하기 위한 팬독 사용자 정의 블록의 구문은 다음과 같습니다. 그리고 정보 블록에 들어갈 내용은 마크다운 문법으로 기술해야 합니다.\n\n::: {.infobox .&lt;type&gt; data-latex=\"{&lt;type&gt;}{&lt;title&gt;}\"}\ntext of infobox\n:::\n\n\n2.4.3.1 정보 블록\n본문에서 서술하는 것보다 유용한 정보를 기술하는 데 사용하는 정보(information) 블록 블록은 다음처럼 사용합니다.\n블록 청크의 옵션 중에 data-latex는 LaTeX에 전달하는 인수입니다. 정보(information)를 의미하는 .information와 {information}가 중복으로 기술된 것은, 멀티 아웃 포맷을 위한 것이므로 반드시 이 형식을 따라야 합니다.\n\n::: {.infobox .information data-latex=\"{information}{information의 용도}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n\n\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다. 짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다. 환경의 내부에는 Markdown으로 문장을 기술합니다.\n\n다음은 정보 블록에서 제목을 생략한 예제입니다.\n\n::: {.infobox .information data-latex=\"{information}{}\"}\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n\n\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다. 짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다. 환경의 내부에는 Markdown으로 문장을 기술합니다..\n\ninfobox를 팬독 블록으로 정의할 경우 HTML에서는 제목이 출력되지 않는 버그5가 있습니다. 이 경우에는 다음처럼 기술하면 재목이 출력되는 멀티 아웃 포맷이 가능합니다. 즉, 본문에서 제목을 표현하는 방법입니다.\n\n::: {.infobox .information data-latex=\"{information}{}\"}\n**information의 용도**\n\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다.\n짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n환경의 내부에는 **Markdown**으로 문장을 기술합니다.\n:::\n\n\ninformation의 용도\ninformation은 독자에게 전하고 싶은 정보나 아이디어를 기술하는 데 사용합니다. 짙은 회색 테두리에 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다. 환경의 내부에는 Markdown으로 문장을 기술합니다.\n\n또 하나의 방법은 bitPublish가 제공하는 사용자 정의 R 함수 custom_block()를 사용하는 방법이 있습니다.\n\ncustom_block(msg, type, title)\n\n이 방법도 멀티 아웃 포맷을 지원합니다. 다음과 같은 knitr 청크를 이용합니다.\n```{r}\n#| echo: false\n#| results: asis\ncustom_block(\"\n**information**은 본문에서 서술하는 것보다 **유용한 정보**를 기술하는 데 사용합니다. \n파란색 테두리와 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n\", title = \"information의 용도\", type = \"information\")\n```\n\n\ninformation의 용도\ninformation은 본문에서 서술하는 것보다 유용한 정보를 기술하는 데 사용합니다. 파란색 테두리와 정보를 나타내는 아이콘을 배치하여 주위를 환기시킵니다. 블록 내부를 채울 텍스트는 Markdown 문법으로 기술합니다.\n\n\n사용자 정의 함수인 custom_block()를 사용하기 위해서는 사전에 다음처럼 init_environments.R 파일을 로드해야 합니다.\n```{r}\n#| label: init\n#| include: false\nsource(here::here(\"_extensions\", \"bit2r\", \"bitPublish\", \"init_environments.R\"))\n```\n\n\n2.4.3.2 주의 블록\n당부하고 싶은 주의사항을 기술하는 데 사용하는 주의(caution) 블록은 다음처럼 사용합니다.\n\n::: {.infobox .caution data-latex=\"{caution}{}\"}\n**caution의 용도**\n\n**caution**은 당부하고 싶은 **주의사항**을 기술하는 데 사용합니다. \n주황색 테두리에 주의를 나타내는 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\ncaution의 용도\ncaution은 당부하고 싶은 주의사항을 기술하는 데 사용합니다. 주황색 테두리에 주의를 나타내는 아이콘을 배치하여 주위를 환기시킵니다. 블록 내부를 채울 텍스트는 Markdown 문법으로 기술합니다.\n\n\n\n2.4.3.3 경고 블록\n주의사항보다 더 치명적인 문제를 야기할 경고를 기술하는 데 사용하는 경고(warning) 블록은 다음처럼 사용합니다.\n\n::: {.infobox .warning data-latex=\"{warning}{}\"}\n**warning의 용도**\n\n**warning**은 주의사항보다 더 치명적인 문제를 야기할 **경고**를 기술하는 데 사용합니다. \n붉은색 테두리에 폭탄을 표현한 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\nwarning의 용도\nwarning은 주의사항보다 더 치명적인 문제를 야기할 경고를 기술하는 데 사용합니다. 붉은색 테두리에 폭탄을 표현한 아이콘을 배치하여 주위를 환기시킵니다. 블록 내부를 채울 텍스트는 Markdown 문법으로 기술합니다.\n\n\n\n2.4.3.4 팁 블록\n유용하게 사용할 수 있는 아이디어나 비법을 설명하는 데 사용하는 팁(tip) 블록은 다음처럼 사용합니다.\n\n::: {.infobox .tip data-latex=\"{tip}{}\"}\n**tip의 용도**\n\n**tip**은 유용하게 사용할 수 있는 **아이디어나 비법**을 기술하는 데 사용합니다. \n초록색 테두리에 아이디어를 나타내는 전구 아이콘을 배치하여 주위를 환기시킵니다.\n블록 내부를 채울 텍스트는 **Markdown 문법**으로 기술합니다.\n:::\n\n\ntip의 용도\ntip은 유용하게 사용할 수 있는 아이디어나 비법을 기술하는 데 사용합니다. 초록색 테두리에 아이디어를 나타내는 전구 아이콘을 배치하여 주위를 환기시킵니다. 블록 내부를 채울 텍스트는 Markdown 문법으로 기술합니다.\n\n\n\n\n2.4.4 이야기 블록\n이야기 블록은 저자가 독자에게 강조해서 하고 싶은 이야기나, 명사의 명언을 인용하여 이야기할 때 사용하는 블록으로 멀티 아웃 포맷을 지원합니다.\n\n2.4.4.1 PDF 저작 전용\nPDF 문서로만 저작할 경우에 사용하는데, shadequote 환경을 이용합니다. 이야기 블록 구문은 다음과 같습니다.\n\n\\begin{shadequote}[&lt;alignment&gt;]{&lt;author&gt;}\n  text of quote\n\\end{shadequote}\n\n다음처럼 괄호를 비우면, 저자의 이야기를 표시합니다.\n\n\\begin{shadequote}{}\n통상적으로 많은 사람들은 `수준을 등급의 높고 낮음을 의미하는 가치의 척도'로 \n인식하고 있다. 그러나 통계학계에서는 levels을 수준으로 직역하여 사용해 왔다. \n혼동스럽다면, \\textbf{수준을 범주형 데이터의 범주로 이해}하기 바란다.\n\\end{shadequote}\n\n명사의 명언을 인용하여 이야기할 경우에는 화자의 이름을 첫째 괄호에 기입합니다. 이 예제는 화자의 이름을 오른쪽 정렬하였습니다. 정렬은 l, c, r로 표기합니다. 각각 왼쪽, 가운데, 오른쪽 정렬을 의미합니다.\n\n\\begin{shadequote}[r]{안창호}\n진실은 반드시 따르는 자가 있고, 정의는 반드시 이루는 날이 있다.\n\\end{shadequote}\n\n\n\n2.4.4.2 HTML 저작 전용\nHTML 문서로만 저작할 경우에 사용하는데, blockquote 태그를 이용합니다. 이야기 블록 구문은 다음과 같습니다.\n\n&lt;blockquote class=\"otro-blockquote\"&gt;\n  text of quote\n  &lt;span&gt;author&lt;/span&gt;\n&lt;/blockquote&gt;\n\n다음과 같이 기술하며, 화자의 이름의 정렬을 지원하지 않습니다. 왼쪽 정렬로 출력됩니다.\n\n&lt;blockquote class=\"otro-blockquote\"&gt;\n  진실은 반드시 따르는 자가 있고, 정의는 반드시 이루는 날이 있다.\n  &lt;span&gt;안창호&lt;/span&gt;\n&lt;/blockquote&gt;\n\n\n  진실은 반드시 따르는 자가 있고, 정의는 반드시 이루는 날이 있다.\n  안창호\n\n\n\n2.4.4.3 멀티 아웃 포맷\n멀티 아웃 포맷을 지원하는 구문은 다음과 같습니다. align은 PDF 저작에서만 동작합니다.\n```{r}\n#| echo: false\n#| results: asis\nquote_block(\"\ntext of quote\n\", speaker = author, align = align)\n```\n앞의 안창호 선생님의 명언을 이용하는 방법은 다음과 같습니다.\n```{r}\n#| echo: false\n#| results: asis\nquote_block(\"진실은 반드시 따르는 자가 있고, 정의는 반드시 이루는 날이 있다.\", \n            speaker = \"안창호\", align = \"right\")\n```\n\n\n진실은 반드시 따르는 자가 있고, 정의는 반드시 이루는 날이 있다. 안창호\n\n\n저자의 이야기는 다음처럼 표현합니다.\n```{r}\n#| echo: false\n#| results: asis\nquote_block(\"통상적으로 많은 사람들은 '수준을 등급의 높고 낮음을 의미하는 가치의 \n척도'로 인식하고 있다. 그러나 통계학계에서는 levels을 수준으로 직역하여 사용해 왔다. \n혼동스럽다면, 수준을 범주형 데이터의 범주로 이해하기 바란다.\")\n```\n\n\n통상적으로 많은 사람들은 ’수준을 등급의 높고 낮음을 의미하는 가치의 척도’로 인식하고 있다. 그러나 통계학계에서는 levels을 수준으로 직역하여 사용해 왔다. 혼동스럽다면, 수준을 범주형 데이터의 범주로 이해하기 바란다.\n\n\n\n\n\n2.4.5 타이틀 박스\n앞의 예제에서 `학습목표’를 정의한 블록 서식을 타이틀 박스라 부르겠습니다. 여러 용도로 사용될 수 있어 목적으로 이름을 특정할 수 없기 때문입니다. 학습 시나리오, 학습의 목표, 뭐든 상관없습니다.\n타이틀 박스도 멀티 아웃 포맷을 지원합니다.\n\n2.4.5.1 PDF 저작 전용\nPDF 문서로만 저작할 경우에 사용하는데, titlebox 명령을 이용합니다. 타이틀 박스 블록 명령은 다음과 같으며, 블록의 내부를 채울 색상 테마를 지정합니다.\n\n\\titlebox}{text of title}{color theme}{text of box}\n\n다음은 학습목표를 설명하는 용도로 타이틀 박스 블록을 사용한 예제입니다.\n\n\\titlebox{학습 목표}{Cbluejeans}{bitPublish가 제공하는 기능을 이해하고, \n  bitPublish을 이용해서 원하는 책을 저작할 수 있다.}\n\n`Cbluejeans’는 색상을 지정하기 위한 컬러입니다. 프리엠블에서 미리 지정해 놓은 컬러에는 다음과 같은 것을 사용할 수 있습니다. 이름과 이름에 해당하는 RGB값입니다.\n\n\n2.4.5.2 HTML 저작 전용\nHTML 문서로만 저작할 경우에 사용하는데, titlebox 태그를 이용합니다. 타이틀 박스 블록 구문은 다음과 같습니다.\n\n&lt;titlebox class=\"color theme 클래스\"&gt;\n  &lt;h4&gt;&lt;span class=\"color of title\"&gt;text of title&lt;/span&gt;&lt;/h4&gt;  \n  &lt;p&gt;text of box&lt;/p&gt;\n&lt;/titlebox&gt;\n\n다음과 같이 기술하며, 타이틀 색상과 블록의 테두리를 채울 색상 테마를 지정합니다.\n\n&lt;titlebox class=\"bluejeans\"&gt;\n  &lt;h4&gt;&lt;span class=\"Cbluejeans\"&gt;학습목표&lt;/span&gt;&lt;/h4&gt;  \n  &lt;p&gt;bitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 책을 \n저작할 수 있다.&lt;/p&gt;\n&lt;/titlebox&gt;  \n\n\n  학습목표  \n  bitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 책을 \n저작할 수 있다.\n  \n\n\n2.4.5.3 멀티 아웃 포맷\n멀티 아웃 포맷을 지원하는 구문은 다음과 같습니다. theme 인수로 HTML과 PDF에서의 타이클 박스 블록의 색상을 정의합니다. 그러나 블록의 모양과 색상의 표현은 두 포맷에서 상이합니다.\n```{r}\n#| echo: false\n#| results: asis\ntitlebox_block(\"text of box\", title = \"text of title\", theme = \"color theme\")\n```\n앞의 학습 목표 예제는 다음과 같이 기술합니다.\n```{r}\n#| echo: false\n#| results: asis\ntitlebox_block(\"bitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 \n책을 저작할 수 있다.\", title = \"학습목표\", theme = \"bluejeans\")\n```\n\n\n\n학습목표\n\n\nbitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 책을 저작할 수 있다.\n\n\n\n색상과 타이블 제목을 바꿔봅니다.\n```{r}\n#| echo: false\n#| results: asis\ntitlebox_block(\"bitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 \n책을 저작할 수 있다.\", title = \"이 장을 마치면\", theme = \"lavander\")\n```\n\n\n\n이 장을 마치면\n\n\nbitPublish가 제공하는 기능을 이해하고, bitPublish을 이용해서 원하는 책을 저작할 수 있다.\n\n\n\n\n\n\n2.4.6 예제\nQuarto에서 제공하는 정리(theorems)의 변형을 이용합니다. 이 방법은 아주 심플하고 멀티 아웃 포맷과 크로스-레퍼런스까지 지원합니다. 다만 이전에 LaTeX으로 구현한 서식이 있는 블록보다 너무 평범해서 본문에서 두드러지지는 않습니다. 그러나 문법이 쉽고 불필요한 카운터의 정의가 필요없기 때문에, bitPublish는 이 방법을 표준으로 정했습니다.\n다음과 같이 사용합니다.\n\n#exr-label은 예제를 알려주는 지시자이면서,\n\n크로스-레퍼런스에 사용될 라벨입니다.\n\ntitle of exercise는 예제의 타이틀입니다.\n\n만약 예제의 타이틀을 사용하지 않는다면 기술하지 않습니다.\n\ntext of exercise는 예제의 본문입니다.\n\n\n::: {#exr-label}\n### title of exercise\ntext of exercise\n:::\n\n\n라벨 접두어\n예제가 정상적으로 동작하기 위해서는 라벨을 정의할 때, 반드시 접두어 exr-을 사용해야 합니다.\n\n다음은 타이틀을 포함한 예제입니다.\n\n::: {#exr-bitformat}\n### bitPublish 서식 예제\nbitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n:::\n\n\n예제 2.1 (bitPublish 서식 예제) bitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n\n다음은 타이틀을 제외한 예제입니다.\n\n::: {#exr-bitformat2}\nbitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n:::\n\n\n예제 2.2 bitPublish의 서식 중에서 예제, 연습문제, 주의, 정보, 인용을 만들어 보아라.\n\n라벨을 레퍼런스하는 방법은 다음과 같습니다.\n\n[@exr-bitformat]에서 연습한 bitPublish의 서식은 반드시 숙지하시기 바랍니다.\n\n예제 2.1에서 연습한 bitPublish의 서식은 반드시 숙지하시기 바랍니다.\n\n\n2.4.7 연습문제\n연습문제는 현재 멀티 아웃 포맷을 지원하지 않습니다. PDF 아웃 포맷만 지원하기 때문에, 어느정도 LaTeX애 대한 지식이 필요합니다.\n\n2.4.7.1 LaTeX 환경\n기술서나 학습서의 경우에는 연습문제를 제공하는 경우가 많습니다. bitPublish에서 연습문제 서식은 Exercise 환경을 이용합니다.\n\n\\begin{Exercise}\n  text of exercise\n\\end{Exercise}\n\n또한 연습문제의 해답 서식은 Answer 환경을 이용합니다.\n\n\\begin{Answer}\n  text of answer\n\\end{Answer}\n\n\n\n2.4.7.2 tasks 환경\n또한 연습문제의 내용을 위해서 tasks 환경과 task 명령을 사용할 수 있습니다. 4지선다형의 객관식에 유용하게 사용할 수 있습니다.\n다음 예제는 4지선다형의 객관식 문제의 예시입니다. 각 문항은 아라비아 숫자로 표현하게 됩니다.\n\n\\noindent 1. 다음 중에서 tidyverse에 포함되지 않는 패키지는 무엇인가?\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task dplyr\n \\task ggplot2\n \\task tidyr\n \\task dlookr\n\\end{tasks}\n\n이 LaTeX 스크립트는 다음과 같이 조판됩니다.\n\n\n2.4.7.3 Verbatim 환경\n연습문제나 연습문제의 해답에 R 스크립트와 같은 프로그램 코드를 사용할 수 있습니다. 이 경우에는 Verbatim 환경을 사용하면 좋습니다.\n다음 예제는 간단한 R 스크립트로 글자 색상이나 크기를 지정할 수 있습니다.\n\n\\begin{Verbatim}[fontsize=\\small,formatcom=\\color{black}]\nif(!require(\"ragg\")){\n  install.packages(\"ragg\")\n  library(\"ragg\")\n}   \n\\end{Verbatim}\n\n이 LaTeX 스크립트는 다음과 같이 조판됩니다.\n\n\n2.4.7.4 연습문제 설정\n연습문제는 다음과 같이 두 가지 설정을 사용자가 선택할 수 있습니다.\n\n연습문제 헤더의 넘버링\n\n장(chapter)에 한 번의 연습문제를 사용할 경우의 넘버링\n\n“1장. 연습문제”\n\n장(chapter)에 여러 번의 연습문제를 사용할 경우의 넘버링\n\n넘버링은 {장 번호}.{절 번호}의 형식을 따름\n“1.1 연습문제”\n\n\n\n연습문제 헤더의 이름\n\n{넘버링} {이름}의 형식으로 기본 이름 설정은 “연습문제”임\n\n“1장. 연습문제”\n\n이름 설정을 “Exercise”로 설정하면, 다음과 같이 출력됨\n\n“1장. Exercise”\n\n\n\n다음은 헤더의 넘버링을 장에 여러 번 연습문제를 사용하는 예시입니다. chapterexerlevel의 값을 false로 지정했기 때문입니다. 만약 이 값을 true로 지정하면 장에 한 번의 연습문제를 사용하는 형식이 됩니다.\nExercise 환경에서 label은 반드시 지정해야 합니다. 이 라벨은 연습문제의 해답 페이지에 연습문제가 있는 페이지로 하이퍼링크를 생성할 때 크로스-레퍼런스로 사용됩니다. 이 예제에서는 label을 exerbitpublish로 지정했습니다.\n\n\\setboolean{chapterexerlevel}{false}\n\\begin{Exercise}[label={exerbitpublish}, name={Exercise}]\n  text of exercise\n\\end{Exercise}\n\nchapterexerlevel의 값이 true인 연습문제 헤더의 넘버링은 그림 2.3같이 출력됩니다.\n\n\n\n\n\n그림 2.3: 장에 한 번 연습문제를 사용하는 예시\n\n\n\n\nchapterexerlevel의 값이 false인 연습문제 헤더의 넘버링은 그림 2.4같이 출력됩니다.\n\n\n\n\n\n그림 2.4: 장에 여러 번 연습문제를 사용하는 예시\n\n\n\n\n다음은 헤더의 이름을 Exercise로 지정하는 예시로 그림 2.5같이 출력됩니다.\n\n\\setboolean{chapterexerlevel}{false}\n\\begin{Exercise}[label={exerbitpublish}, name={Exercise}]\n  text of exercise\n\\end{Exercise}\n\n\n\n\n\n\n그림 2.5: 헤더 이름을 변경한 예시\n\n\n\n\n\n\n2.4.7.5 연습문제 해답 설정\n연습문제는 다음과 같이 세 가지를 설정해야 합니다.\n\n장(chapter)에 처음 나타나는 연습문제의 해답 여부\n\nfirstanswerofthechapter을 true 혹은 false로 설정\ntrue이면 장 정보를 출력하고,\nfalse이면 장 정보를 출력하지 않는다.\n\n장(chapter)의 이름(제목) 설정\n\n연습문제 해답에 정보로서의 장 제목을 출력하기 위해서,\nAnswerChapter 명령에 해당 장의 라벨을 설정해줌\n\n해당 연습문제의 라벨정보 설정\n\n해답 위치에서 연습문제로 하이퍼 링크를 연결해 주기 위한 크로스-레퍼런스\nref 인수에 라벨정보 할당\n\n\n다음은 연습문제 헤더 정보에 장의 정보를 출력합니다. firstanswerofthechapter의 값을 true로 지정했기 때문입니다. 만약 이 값을 false로 지정하면 장 정보를 출력하지 않고 해답을 출력해 줍니다. 중요한 것은 Answer 환경이 끝난 위치에 firstanswerofthechapter의 값을 false로 초기화해야 한다는 것입니다.\n또한 AnswerChapter 명령에는 연습문제가 포함된 장의 라벨인 sec-bitpublish를 지정했습니다.\nAnswer 환경에서 label은 반드시 지정해야 합니다. 이 라벨은 연습문제의 해답 페이지에 연습문제가 있는 페이지로 하이퍼링크를 생성할 때 크로스-레퍼런스로 사용됩니다. 이 예제에서는 label을 exerbitpublish로 지정했습니다.\n\n\\renewcommand{\\AnswerChapter}{\\nameref{sec-bitpublish}}\n\\setboolean{firstanswerofthechapter}{true}\n\\begin{Answer}[ref={exerbitpublish}]\n  text of answer\n\\end{Answer}\n\\setboolean{firstanswerofthechapter}{false}\n\n위와 같은 설정은 연습문제 해답의 헤더 부분에 그림 2.6같은 정보를 표현해 줍니다. 보라색의 정보가 크로스-레퍼런스로 연결된 하이퍼 링크입니다. bitPublish 소개'를 클릭하면 장 제목이 있는 2장의 첫 페이지로 이동하고,41’을 클릭하면 해당 연습문제가 있는 41 페이지로 이동하게 됩니다.\n\n\n\n\n\n그림 2.6: 연습문제 해답의 헤더 모양\n\n\n\n\n\n\n2.4.7.6 연습문제와 연습문제 해답 예제\n이상을 종합하여 다음과 같은 연습문제와 연습문제 해답을 기술하였습니다. 연습문제는 현재 위치에 출력되고, 연습문제 해답은 5장 연습문제 풀이에 출력됩니다.\n\n\\setboolean{chapterexerlevel}{false}\n\\begin{Exercise}[label={exerbitpublish}]\n\\noindent 1. 다음 중에서 tidyverse에 포함되지 않는 패키지는 무엇인가?\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task dplyr\n \\task ggplot2\n \\task tidyr\n \\task dlookr\n\\end{tasks}\n\n\\noindent 2. 다음의 데이터 객체를 외부 파일로 출력해 보아라.\n\\begin{Verbatim}[fontsize=\\small,formatcom=\\color{black}]\nif(!require(\"ragg\")){\n  install.packages(\"ragg\")\n  library(\"ragg\")\n}   \n\\end{Verbatim}\n\n\\noindent 3. ggplot2 패키지의 diamonds 데이터셋으로 dplyr을 이용해서 다음 과정으로 계산하고 시각화 하여라.\n\\begin{tasks}[label=(\\arabic*)](1)\n \\task cut과 color별로 평균 가격과 평균 캐럿을 계산한 후 평균 가격의 내림차순으로 정렬하라.\n \\task (1)의 결과로 평균 가격과 평균 캐럿의 상관계수를 구하라.\n \\task (1)의 결과로 평균 가격과 평균 캐럿의 산점도를 시각화하라. 이 때, cut별로 색상을 구분하라.\n\\end{tasks}\n\\end{Exercise}\n\n\\renewcommand{\\AnswerChapter}{\\nameref{sec-bitpublish}}\n\\setboolean{firstanswerofthechapter}{true}\n\\begin{Answer}[ref={exerbitpublish}]\n\n\\noindent 1. (4) dplyr\n\n\\noindent 2. ragg 패키지가 없으면, 패키지를 설치한다. 그리고 ragg 패키지를 로드한다.\n\n\\noindent 3. \n\\begin{Verbatim}[fontsize=\\small,formatcom=\\color{black}]\n# (1)\nlibrary(tidyverse)\n\nagg_diamonds &lt;- diamonds |&gt; \n  group_by(cut, color) |&gt; \n  summarise(mean_price = mean(price),\n            mean_carat = mean(carat),\n            .groups = \"drop\") |&gt; \n  arrange(desc(mean_price)) \nagg_diamonds  \n\n# (2)\nagg_diamonds |&gt; \n  (function(x) cor(x$mean_price, x$mean_carat))()\n\n# (3)\nagg_diamonds |&gt; \n  ggplot(aes(x = mean_price, y = mean_carat, color = cut)) +\n  geom_point() +\n  labs(title = \"Relation of price and carat\",\n       subtitle = \"by cut class\",\n       x = \"price\", y = \"carat\")\n\\end{Verbatim}\n\n\\end{Answer}  \n\\setboolean{firstanswerofthechapter}{false}\n\n\n\n2.4.7.7 연습문제 해답 출력\n연습문제 해답을 출력하기 위해서는 출력하고자 하는 위치에 shipoutAnswer 명령을 기술해야 합니다.\n본 예제 문서에서는 다음 정보를 chap_solve_exercise.qmd 파일에 기술했습니다.\n\n# 연습문제 풀이 {#sec-solve}\n\\shipoutAnswer\n\n그리고 설정 파일인 _quarto.yml 파일에 다음과 같이 마지막 장 위치에 chap_solve_exercise.qmd 파일을 위치시켰습니다. 그래서 5장에 연습문제 해답을 출력하게 됩니다. 모든 장에 있는 모든 연습문제의 해답이 5장에 출력되는 것입니다.\n\nproject:\n  type: book\n  output-dir: docs\n\nlang: ko-KR\n\nbook:\n  title: \"bitPublish를 이용하여 한글 책 조판하기\"\n  chapters:\n    - index.qmd\n    - chap_exams.qmd\n    - chap_intro_bitpublish.qmd\n    - chap_troubleshooting.qmd\n    - chap_version.qmd\n    - chap_solve_exercise.qmd    \nbibliography: references.bib\nlink-citations: false\n\n\n\n2.4.7.8 연습문제 페이지 넘기기\n만약에 연습문제를 본문에 출력하지 않고 다음 페이지에서 시작하고 싶다면, 다음처럼 clearpage 명령어를 사용하면 됩니다.\n\n\\clearpage"
  },
  {
    "objectID": "chap_intro_bitpublish.html#bitpublish-활용을-위한-팁",
    "href": "chap_intro_bitpublish.html#bitpublish-활용을-위한-팁",
    "title": "2  bitPublish 소개",
    "section": "2.5 bitPublish 활용을 위한 팁",
    "text": "2.5 bitPublish 활용을 위한 팁\nbitPublish는 LaTeX 기반의 솔루션이기 때문에, 좀더 유용하게 사용하기 위해서 LaTeX에 대한 지식을 요구합니다. R 환경에서는 knitr 패키지를 이용해서 Quarto 문서를 마크다운 문서로 랜더링하기 때문에 knitr 청크에 대한 지식도 필요합니다.\n그러나 너무 걱정하지 마십시오. 심도있는 지식이 아닌, 기초적인 지식으로도 충분하게 책을 저작할 수 있습니다. 이 절에서는 요긴하게 사용된 LaTeX 팁을 소개합니다.\n\n2.5.1 이미지 삽입\n\n2.5.1.1 이미지 파일\n이미지 파일을 삽입하기 위해서는 다음처럼 knitr 패키지의 include_graphics() 함수를 사용하는 것을 추천합니다. 이 때, knitr 청크는 다음과 같이 사용합니다.\n```{r}\n#| label: fig-label\n#| echo: false\n#| out-width: \"90%\"\n#| fig-align: \"center\"\n#| fig-cap: \"이미지 캡션\"\n#| fig-pos: \"htb!\"\n\nknitr::include_graphics(\"이미지 파일이름.png\")\n```\n이 예제는 다음과 같은 작업을 수행합니다.\n\n`이미지 파일이름.png’ 파일을 본문에 삽입하는데,\n\n이미지의 크기는 본문 너비의 90%에 해당하게 적용하며, 이미지는 가운데 정렬로 배치함\n\n이미지의 캡션은 “이미지 캡션”으로 정의하며,\n크로스-레퍼런스를 위한 라벨의 이름은 `fig-label’로 설정하는데, 라벨의 접두어 `fig-’를 사용한 `fig-라벨이름’의 포맷을 권장함\n이미지의 페이지 배치는\n\n이미지를 정확히 해당 위치(here)에 일단 배치,\n여의치 않으면, 그 다음 페이지 가장 윗부분에 배치,\n만약 이것도 여의치 않으면, 그 다음 페이지 가장 아랫 부분에 배치.\n\n\n이미지의 페이지 배치는 다음과 같은 fig-pos(미니도넛 2021) 옵션으로 지정합니다.\n\n\n\n\n\n\n\n플로트 지정자\n의미\n\n\n\n\nh\nhere의 약자로, 본문에 위치한 그 자리에 이미지 배치\n\n\nt\ntop의 약자로, 이미지가 위치한 페이지의 가장 윗부분에 배치. 크기가 맞지 않으면 다음 페이지의 가장 윗쪽에 배치\n\n\nb\nbottom의 약자로, 이미지가 위치한 페이지 가장 아래에 이미지 배치. 크기가 맞지 않으면 다음 페이지의 가장 아래에 배치\n\n\np\n이미지가 텍스트 없는 단독 페이지를 따로 만들어 배치\n\n\n!\n적절한 위치 결정을 위해, 적용한 지정자 재정의. 지정자가 나열된 순서에 따라 적절한 위치에 이미지 삽입\n\n\n\n플로트 지정자 예제에서 사용한 “htb!”는 일단 이미지를 정확히 그 위치(h)에 배치하려 하고, 여의치 않으면 다음은 위(t)이기 때문에 그 다음 페이지 가장 윗부분에 배치합니다. 만약 그것도 여의치 않으면 그 다음은 아래(b)이기 때문에 그 다음 페이지 가장 아랫 부분에 배치합니다.\n그런데 bitPublish에서 fig-pos의 기본값6이 “htb!”로 설정되었기 때문에 이 설정을 생략해도 적당한 페이지에 이미지를 배치합니다. fig-align의 기본값도 “center”입니다.\n실제로 Allison Horst가 그린 R learners 일러스트를 본문에 삽입하고 참조해봅니다.\nhttps://allisonhorst.com/everything-else 페이지에서 다운로드한 다음 예제의 이미지 파일을 다음처럼 본문에 삽입합니다. 실제 홈페이지의 파일 이름은 그 의미를 파악할 수 없을 정도로 매우 긴, 암호같은 이름이었지만 편의를 위해서 rlearners.png로 변경했습니다.\n```{r}\n#| label: fig-rlearners\n#| echo: false\n#| out-width: \"90%\"\n#| fig-align: \"center\"\n#| fig-cap: \"R learners, Allison Horst.\"\n#| fig-pos: \"htb!\"\n\nknitr::include_graphics(\"img/rlearners.png\")\n```\n그리고 이미지를 크로스-레퍼런스하기 위해서는 다음과 같이 사용합니다.\nAllison Horsts는 [@fig-rlearners]\\과 같은 일러스트를 그렸습니다.\n\n\n\n\n\n그림 2.7: R learners, Allison Horst.\n\n\n\n\n이 이미지 크로스 크로스-레퍼런스는 다음과 같이 표현됩니다.\nAllison Horsts는 그림 2.7같은 일러스트를 그렸습니다.\n주의할 점은 HTML의 경우에는 뒤에서 다룰 자동 조사 처리를 지원하지 않기 때문에 \\과가 와나 과로 자동 변환되지 않습니다. 참고로 자동 조사 처리는 뒤에서 자세히 다룹니다.\n\nfig-pos과 label\n웹 페이지로 배포하는 문서는 페이지로 구분되지 않기 때문에 이미지는 항상 그(here) 자리에 출력됩니다.\n그래서 본문에서 “다음 그림처럼”과 같은 표현이 가능합니다만, 페이지가 구분되는 책에서는 이 표현은 적절하지 않습니다. 왜냐하면 페이지 상황에 따라 이미지가 다음 페이지로 넘어갈 수 있는 등 저작 과정에서는 예측이 안됩니다.\n그래서 ’fig-pos’의 값을 “htb!”으로 설정하고 ’label’을 지정하여 크로스-레퍼런스를 이용해서, “그림 2.1처럼”과 같이 표현하는 것이 좋습니다.\n\n\n\n2.5.1.2 R 그래픽스\nR 마크다운에 익숙한 R 사용자라면 다음처럼 knitr 청크(chunk)를 이용하여 R 스크립트 실행으로 본문에 플롯 삽입을 수행할 수 있습니다. 다음 스크립트는 그림 2.8같은 R 그래픽스 플롯을 출력합니다.\n```{r}\n#| label: fig-hist\n#| echo: false\n#| message: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"70%\"\n#| fig-cap: \"정규분포 히스토그램\"\nset.seed(123)\nhist(rnorm(500), col = \"lightblue\", main = \"정규분포의 히스토그램\")\n```\n\n\n\n\n\n그림 2.8: 정규분포 히스토그램\n\n\n\n\n도서에서 플롯의 크기는 인쇄되는 너비의 70% 정도도 출력되는 것이 적절합니다. 그래서 청크 옵션에 out-width를 사용하였습니다. 이 방법은 멀티 아웃 포맷을 지원하며 4$$6 배판 판형의 레이아웃에 최적화된 설정입니만, 랜더링된 결과를 보고 저작자의 의도대로 수정하시기 바랍니다.\nbitPublish는 ragg 패키지의 agg_png()를 사용하여 본문에 플롯을 시각화합니다. 이 방법은 한글 문자가 포함된 스크립트도 기본 한글 폰트로 문제없이 시각화합니다. 그런데 까다로운 저작자는 플롯의 기본 폰트가 마음에 들지 않을 수 있습니다. 개인적으로는 R 시각화의 한글 폰트로 나눔스퀘어 폰트를 즐겨 사용합니다. 그래서 bitPublish에 나눔스퀘어 폰트로 시각화하는 기능을 구현했습니다.\n만약 기본 폰트가 아닌 나눔스퀘어 폰트를 사용하려면 문서의 맨 앞에 다음 스크립트를 추가합니다.\n```{r init, include=FALSE}\nsource(here::here(\"_extensions\", \"bit2r\", \"bitPublish\", \"init_environments.R\"))\n```\n그런 후, R 플롯을 그리는 knitr 청크에 nanum 옵션을 추가하고 값을 true로 지정합니다. 이 설정은 나눔스퀘어 폰트를 사용해서 R 플롯을 시각화한다는 것을 의미합니다. 다음 스크립트는 그림 2.9같은 R 그래픽스 플롯을 출력합니다.\n```{r}\n#| label: fig-hist\n#| echo: false\n#| message: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"70%\"\n#| fig-cap: \"나눔스퀘어 폰트를 사용한 시각화\"\n#| nanum: true\nset.seed(123)\nhist(rnorm(500), col = \"lightblue\", main = \"정규분포의 히스토그램\")\n```\n\n\n\n\n\n그림 2.9: 나눔스퀘어 폰트를 사용한 시각화\n\n\n\n\n만약 한글이 포함되지 않은 플롯에서 라틴 문자에 사용할 폰트로 Nimbus Sans L 폰트를 사용하려면, nimbus 옵션의 값을 true로 추가하면 됩니다.\n\n\n2.5.1.3 ggplot2 그래픽스\nggplot2 그래픽스도 별도의 설정없이 한글을 출력합니다. 테마는 hrbrthemes 패키지의 theme_ipsum() 함수를 사용하며, 폰트는 R 그래픽스와 동일한 방법으로 나눔스퀘어 폰트를 사용할 수 있습니다.\n다음 스크립트는 그림 2.10같은 ggplot2 그래픽스 플롯을 출력합니다.\n```{r}\n#| label: fig-hist3\n#| echo: false\n#| message: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"70%\"\n#| fig-cap: \"ggplot2 정규분포 히스토그램\"\n#| nanum: true\nset.seed(123)\nrandom_norm &lt;- data.frame(rnd = rnorm(500))\n\nggplot(random_norm, aes(x = rnd)) +\n  geom_histogram(color = \"darkblue\", fill = \"lightblue\") +\n  labs(title = \"ggplot2의 히스토그램\",\n       subtitle = \"500개 정규분포 난수\")\n```\n\n\n\n\n\n그림 2.10: ggplot2 정규분포 히스토그램\n\n\n\n\n\n\n\n2.5.2 표 삽입\n본문에 표를 삽입하는 방법에 다음처럼 3가지 방법을 사용할 수 있습니다.\n\n마크다운을 이용한 표\n\n캡션의 핸들링과 라벨의 지정에 취약해서 권하지 않음\n그러나, 캡션과 라벨을 사용하지 않을 때에는 유용함\n\nLaTeX을 이용한 표\n\n가장 세밀하게 조정할 수 있으나, LaTeX에 대한 지식이 필요함\n\nR을 이용한 표\n\nR에 익숙하면 쉽게 사용할 수 있음\n\n\n\n2.5.2.1 마크다운을 이용한 표\n마크다운을 이용한 표 생성의 경우에는 캡션이 표 내부에 위치하고, 라벨을 지정할 수 없어서 표를 삽입하는 방법으로 적절하지 않습니다.\n다음과 같이 표를 정의합니다. 캡션과 라벨을 사용하지 않을 때에는 유용합니다.\n| 기본값  | 왼쪽 정렬 | 가운데 정렬 | 오른쪽 정렬 |\n|---------|:----------|:-----------:|------------:|\n|내용 1   |내용 2     |내용 3       |내용 4       |\n|내용 5   |내용 6     |내용 7       |내용 8       |\n|내용 9   |내용 10    |내용 11      |내용 12      |\n\nTable: 마크다운 기반 표    \n\n마크다운 기반 표\n\n\n기본값\n왼쪽 정렬\n가운데 정렬\n오른쪽 정렬\n\n\n\n\n내용 1\n내용 2\n내용 3\n내용 4\n\n\n내용 5\n내용 6\n내용 7\n내용 8\n\n\n내용 9\n내용 10\n내용 11\n내용 12\n\n\n\n\n\n2.5.2.2 LaTeX을 이용한 표\nLaTeX을 이용한 표를 삽입하는 방법은 LaTeX 스크립트를 기술하는 것입니다. 다음처럼 테이블을 생성하는 LaTeX 스크립트를 기술합니다.\n\n\\begin{table}[htb!]\n\\centering\n\\begin{tabular}[]{llcr}\n\\toprule\n기본값  & 왼쪽 정렬 & 가운데 정렬 & 오른쪽 정렬 \\\\\n\\midrule\n내용 1 & 내용 2  & 내용 3   & 내용 4    \\\\\n내용 5 & 내용 6  & 내용 7   & 내용 8    \\\\\n내용 9 & 내용 10 & 내용 11  & 내용 12   \\\\\n\\bottomrule\n\\end{tabular}\n\\caption{\\label{tab-latex}LaTex 기반 표}\n\\end{table}\n\n\n\n2.5.2.3 R을 이용한 표\n멀티 아웃 포맷을 지원하는 방법입니다.\nR을 이용해서 표를 만드는 방법에 대표적인 것이 knitr 패키지의 kable() 함수와 kableExtra 패키지의 kable_styling() 함수를 사용하는 방법입니다. 그러나 이 방법은 캡션의 위치가 표의 위에 위치하는 것과 아직 Quarto에서 크로스-레퍼런스가 지원되지 않는 관계로 bitPublish의 table_with_caption() 함수가 이를 지원합니다. 이 함수는 bitPublish에서 제공하는 사용자 정의 함수입니다.\n\ntable_with_caption(tab, label, digits = NULL, big.mark = NULL)\n\n이 함수를 사용할 때 주의할 점은 멀티 아웃 포맷을 지원하기 위해서는 다음처럼 knir 청크에 label로 크로스-레퍼런스를 위한 라벨을 정의하고, tbl-cap로 캡션을 정의해야 합니다. 또한 중복되지만, table_with_caption() 함수에도 label 인수로 라벨을 지정해야 합니다.\n다음은 표 2.1생성합니다.\n```{r}\n#| label: tbl-iris\n#| tbl-cap: \"Sample Iris Data\"\n#| echo: false\n#| results: asis\n\ntable_with_caption(head(iris), label = \"tbl-iris\", digits = 2)\n```\n\n\n\n\n표 2.1: Iris Data\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\n\n\n\n\n2.5.3 크로스-레퍼런스\nHTML에서는 그림과 표의 크로스-레퍼런스가 거의 필요없으나, PDF에서는 꼭 필요한 기능입니다.\nPDF를 위한 LaTeX에서는 다음과 같이 \\ref 명령어를 이용합니다.\n\n\\ref{label}\n\n그러나 멀티 아웃 포맷을 지원하는 다음의 구문을 이용하는 것을 권장합니다.\n\n[@label]\n\n라벨 이름인 label을 정의할 때는 다음의 권장 사항을 따르기 바랍니다.\n\n그림\n\nfig-name\n예) fig-histogram\n\n표\n\ntbl-name\n예) tbl-iris\n\n\n\n\n2.5.4 수식 입력\n수식 입력은 Latex의 수학 공식을 입력하는 TeX 문법을 따릅니다.\n인라인 수식의 경우에는 $와 $ 사이에서 수식을 정의하고, 한 라인 전체에 수식을 사용하기 위해서는 $ $와 $ $ 사이에서 수식을 정의합니다.\n\n데이터가 $x_1, x_2, x_3, \\cdots, x_n$일 때, 도수분포표는 다음과 같이 만든다.\n\n데이터가 \\(x_1, x_2, x_3, \\cdots, x_n\\)일 때, 도수분포표는 다음과 같이 만든다.\n\n누적상대도수: \n$$\nC F_k=\\sum_{i=1}^k f_i^R=\\frac{F_k}{n}\n$$\n\n누적상대도수: \\[\nC F_k=\\sum_{i=1}^k f_i^R=\\frac{F_k}{n}\n\\]\n\n\n2.5.5 찾아보기 등록\nLaTeX의 찾아보기(인덱싱) 기능을 활성화하기 위해, 이미 bitPublish는 프리엠블에 다음처럼 makeidx 패키지를 로드하고 있습니다.\n\n\\usepackage{makeidx}\n\n또한 프리엠블에서는 찾아보기 기능을 활성화하기 위해서 다음의 명령을 포함했습니다.\n\n\\makeindex\n\n그리고 문서에 찾아보기 색인을 표시하기 위한 다음의 명령어를 사용해야 하는데,\n\n\\printindex\n\n이 명령어는 _extensions/bit2r/bitPublish/_extension.yml 파일에 다음과 같이 설정되어 있습니다.\n\ninclude-after-body:  \n  - text: |      \n      \\printindex  \n\n그러므로 찾아보기에 색인 등록을 위해서는 여러분이 작성할 본문에 다음의 인덱스 명령을 사용하기만 하면 됩니다.\n\n\\index{key}\n\n다음 예는 찾아보기 색인에 척도를 등록합니다. 그리고 LaTeX이 알아서 해당 문장이 위치한 페이지를 찾아보기 색인과 연결해 줍니다.\n\n그 현상에 숫자를 부여한 것을 척도\\index{척도}라 한다.\n\n\n찾아보기에서의 언더라인의 표현\nLaTeX에서는 언더라인(_)은 특수문자로 인식합니다. 그래서 문자로서의 언더라인을 입력하려면 역슬래시(\\)를 붙여야 합니다. 그러므로 \\index{key} 명령의 key 값에 언더라인이 있다면 다음처럼 역슬래시를 붙여 표현해야 합니다.\n\\index{include\\_graphics()}\n\n\n\n2.5.6 참고문헌 등록\n참고문헌(bibliography) 등록은 LaTeX의 biblatex 패키지를 이용합니다. 이 패키지를 사용할 수 있는 설정은 이미 되어 있으니, ‘bitPublish를 이용하여 한글 책 조판하기’ 예제를 위한 다음의 `_quarto.yml’을 참고하여 참고문헌 등록을 적용합니다.\n\nbook:\n  title: \"bitPublish를 이용하여 한글 책 조판하기\"\n  chapters:\n    - index.qmd\n    - chap_exams.qmd\n    - chap_intro_bitpublish.qmd\nbibliography: references.bib\nlink-citations: false\n\n참고문헌에 등록하기 위해서는 YAML 헤더에 bibliography 옵션에 기술된 ‘references.bib’ 파일에 참고문헌을 정의합니다.\n다음은 ‘references.bib’ 파일에 정의된 일부분으로 참고한 도서와 웹 사이트의 예입니다.\n@book{ryu2013rstat,\n  author = {유충현, 이상호},\n  title = {R을 이용한 통계학 이해},\n  year = {2013},\n  publisher = {자유아카데미}\n}\n\n@misc{posit2023quarto,\n  author = {posit},\n  title = {Welcome to Quarto},\n  howpublished = {\\url{https://quarto.org/}},\n  note = {Accessed: 2023-05-15}\n}\n‘references.bib’ 파일에 참고문헌을 정의했다고 `참고문헌’이라는 제목의 참고문헌에 등록되지 않습니다. 참고문헌에 등록하기 위해서는, 참고한 본문 내용에 인용(citation) 명령을 적용해야 합니다.\n다음과 같은 LaTeX 인용 명령을 사용합니다.\n\n\\cite{key}\n\n다음의 \\cite{} 명령은 ‘참고 문헌’ 페이지에 참고한 문헌에 대한 정보를 기술하고, 인용된 본문에 링크를 걸어줍니다.\n\nQuarto 홈페이지의 Quarto에 대한 소개\\cite{posit2023quarto}는 다음과 같다. 이러쿵 저러쿵...\n\n마크다운에도 인용을 위한 다음과 같은 명령이 있습니다.\n\n[@key]\n\n그러므로 다음은 앞에서의 LaTeX 명령과 동일한 작업을 수행합니다.\n\nQuarto 홈페이지의 Quarto에 대한 소개[@quarto]는 다음과 같다. 이러쿵 저러쿵...\n\n\n참조문헌의 멀티 아웃 포맷 지원\n인용의 경우에는 LaTeX 명령보다 마크다운 명령을 사용할 것을 권장합니다. 왜냐하면 LaTeX 명령은 PDF 아웃 포맷만 지원하므로, LaTeX 명령을 자제하는 것이 좋습니다. HTML, ePub 포맷과 같은 전자책 저작에도 동작하도록 마크다운 명령을 사용하는 것을 권장합니다.\n\n\n\n2.5.7 자동조사 처리\n예제, 그림, 표 등에 라벨을 지정해서 크로스-레퍼런스를 구현하면 저작자는 번호의 증감에 신경쓸 필요가 없습니다. 그림과 그림 사이에 또 하나의 그림을 삽입하거나, 또는 기존 그림을 제거함으로서 빠뀌게 될 참조 번호를 수정할 필요가 없습니다. LaTeX이 알아서 번호를 수정해주기 때문입니다.\n다음과 같이 출력되는 본문이 있다고 가정합니다.\n그림 2.3과 같이 정규분포를 따르는 히스토그램을 그린다.\n그런데 앞 부분에 크로스-레퍼런스를 적용한 그림 하나를 추가하면 이 문장은 다음과 같이 바뀝니다.\n그림 2.4과 같이 정규분포를 따르는 히스토그램을 그린다.\n그림에 크로스-레퍼런스를 적용해서 그림의 번호 3이 4로 정상적으로 변경되었는데, 조사가 어색합니다. `그림 2.4과’가 아니라 `그림 2.4와’로 출력되야하기 때문입니다. 왜냐하면 우리말의 조사에는 다음과 같은 규칙이 있기 때문입니다. 앞단어의 끝소리의 자소에 따라 다음처럼 조사가 결정되기 때문입니다.(김강수 2007)\n\n\n\n\n\n\n\n\n\n\n\n\n앞단어 끝소리\n와 / 과\n을 / 를\n이 / 가\n은 / 는\n(이)라\n(으)로\n\n\n\n\n리을(ㄹ)\n과\n을\n이\n은\n이라\n로\n\n\nㄹ 아닌 종성\n과\n을\n이\n은\n이라\n으로\n\n\n중성\n와\n를\n가\n는\n라\n로\n\n\n\nLaTeX이 크로스-레퍼런스에서 계산되는 아라비아 숫자의 한글 독음 끝소리 자소에 따라 자동으로 자동조사 처리를 하기 위해서는, 크로스-레퍼런스를 위한 참조 명령 뒤에 붙는 조사에 역 슬래시(\\)불여주면 됩니다.\n다음은 크로스-레퍼런스에서 번호가 계산되었다는 전제로 자동조사 처리를 테스트한 것입니다.\n\n그림 2.3\\와 그림 2.4\\은 같이 정규분포를 따르는 히스토그램을 그린다. \n그림 2.3\\과 그림 2.4\\는 같이 정규분포를 따르는 히스토그램을 그린다.\n\n그림 2.3그림 2.4같이 정규분포를 따르는 히스토그램을 그린다.\n그림 2.3그림 2.4같이 정규분포를 따르는 히스토그램을 그린다.\n\n\n2.5.8 커버 이미지 추가\nHTML 아웃 포맷에서 커머 이미지를 추가할 수 있습니다.\n다음처럼 _quarto.yml 파일의 YAML에서 book 아래 cover-image에 커버 이미지의 경로를 지정하면 됩니다.\nbook:\n  title: \"bitPublish를 이용하여 한글 책 조판하기\"\n  chapters:\n    - index.qmd\n    - chap_exams.qmd\n    - chap_intro_bitpublish.qmd\n    - chap_troubleshooting.qmd\n    - chap_version.qmd\n    - chap_solve_exercise.qmd    \n  cover-image: hexlogo/bitPublish_logo.png    \n이 설정으로 그림 2.11처럼 커버 이미지가 출력되는 HTML 아웃 포맷 첫 화면에 커버 이미지가 출력됩니다.\n\n\n\n\n\n그림 2.11: 커버 이미지가 추가된 HTML 포맷 아웃의 화면\n\n\n\n\n\n\n\n\nHorst, Allison. 2022. “ÇETINKAYA-RUNDEL & LOWNDES QUARTO KEYNOTE”. https://allisonhorst.com/cetinkaya-rundel-lowndes-quarto-keynote.\n\n\nposit. 2023a. “Creating Extensions”. https://quarto.org/docs/extensions/creating.html.\n\n\n———. 2023b. “Welcome to Quarto”. https://quarto.org/.\n\n\nYihui Xie, Emily Riederer, Christophe Dervieux. 2022. “R Markdown Cookbook”. https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html.\n\n\n김강수. 2007. “한글 라텍에서 조사 이형태 교체의 자동화에 관하여”. The Asian Journal of TEX 1 (2): 153–66. http://ajt.ktug.org/2007/0102karnes.pdf.\n\n\n미니도넛. 2021. “이미지 특정 위치에 고정하기”. https://forestunit.tistory.com/117."
  },
  {
    "objectID": "chap_intro_bitpublish.html#footnotes",
    "href": "chap_intro_bitpublish.html#footnotes",
    "title": "2  bitPublish 소개",
    "section": "",
    "text": "https://quarto.org/↩︎\n한국정기간행물햡동조합 홈페이지, http://kptc.or.kr/pds/paperstorys.html 참고↩︎\nserif 폰트는 바탕체 폰트를 의미합니다. 글자의 획에서 부리처럼 날카롭게 튀어나온 부분을 세리프(serif)라 합니다. 영어는 로만체, 한국어의 경우에는 과거에 명조체라는 이름으로 통용되던 바탕체 서체를 의미합니다.↩︎\nserif 폰트는 돋움체 폰트를 의미합니다. 프랑스어로 sans는 “~가 없이”라는 뜻으로, sans-serif는 세리프가 없는 서체입니다. 한국어의 경우에는 과거에 고딕체라는 이름으로 통용되던 돋움체 서체를 의미합니다.↩︎\n원인을 알고 있으나 저자의 웹 프로그래밍 기술적인 한계로 해결하지 못했음↩︎\n“htb!”을 기본값으로 설정하기 위해서는, 뒷부분에서 설명할 플롯에서의 한글 폰트 적용을 위한 init_environments.R 파일을 로드하는 설정을 전제로 합니다.↩︎"
  },
  {
    "objectID": "chap_troubleshooting.html#quarto-오류",
    "href": "chap_troubleshooting.html#quarto-오류",
    "title": "3  Troubleshooting",
    "section": "3.1 Quarto 오류",
    "text": "3.1 Quarto 오류\n\n3.1.1 TeXlive 버전 이슈\n다음처럼 미리보기 명령이나,\n\nquarto preview --to bitPublish-pdf\n\n랜더링 명령에서,\n\nquarto render --to bitPublish-pdf\n\n아래와 같은 에러가 발생하는 경우가 있습니다.\nupdating existing packages\nfinding package for bclogo.sty\nERROR: Your TexLive version is not updated enough to connect to the remote \nrepository and download packages. Please update your installation of TexLive \nor TinyTex.\n\nUnderlying message: Local TeX Live (2022) is older than remote repository (2023).\nCross release updates are only supported with\n  update-tlmgr-latest(.sh/.exe) --update\nSee https://tug.org/texlive/upgrade.html for details.\n매년 4월 TeXlive는 원격저장소를 TeX의 새해 버전으로 업데이트합니다. 이 경우 TeX의 이전 년도 설치본은 원격 저장소에서 패키지를 다운로드/설치할 수 없습니다. 사용자가 TeXlive 또는 TeXlive는 원격저장소를 이용하는 TinyTex을 업데이트 해야 합니다.\nTeXlive를 사용한다면, 다음 명령으로 TeXlive를 업데이트하세요.\n\nupdate-tlmgr-latest --update\n\nTinyTex을 사용한다면, 다음 명령으로 TinyTex을 업데이트하세요.\n\nquarto update tinytex"
  },
  {
    "objectID": "chap_troubleshooting.html#latex-오류",
    "href": "chap_troubleshooting.html#latex-오류",
    "title": "3  Troubleshooting",
    "section": "3.2 LaTeX 오류",
    "text": "3.2 LaTeX 오류\n\n3.2.1 찾아보기 오류\n다음과 같이 찾아보기 명령 \\index{}를 사용할 때,\n\n\\index{include_graphics()}\n\n텍스트 내에 언더라인(_)이 있을 경우 다음과 같은 에러가 발생합니다.\nompilation failed- Error compiling latex\nMissing $ inserted.\n&lt;inserted text&gt; \n                $\nl.54   \\item include_\n                     graphics(), \\hyperpage{27} \n문자로서의 언더라인을 기술하기 위해서는 다음과 같이 언더라인에 역 슬래시를 붙여서 기술합니다.\n\n\\index{include\\_graphics()}"
  },
  {
    "objectID": "chap_troubleshooting.html#설치-이슈",
    "href": "chap_troubleshooting.html#설치-이슈",
    "title": "3  Troubleshooting",
    "section": "3.3 설치 이슈",
    "text": "3.3 설치 이슈\n\n3.3.1 bitPublish 파일 다운로드 설치\nbitPublish 프로젝트를 만들기 위해서 다음 명령을 수행하면 Github에서 bitPublish가 설치됩니다.\n\nquarto use template bit2r/bitPublish\n\n혹은 다음처럼 기존 문서에 bitPublish extension을 설치하는 명령으로도 Github에서 bitPublish가 설치됩니다.\n\nquarto install extension bit2r/bitPublish\n\n그러나 사용자 PC 환경에서, 보안 프로그램 등의 이슈로 quarto 명령 설치에 오류가 발생할 수 있습니다. 이 경우에는 Github으로부터 bitPublish를 다운로드한 후 특정 디렉토리에 복사해서 사용하면 됩니다. 그러나 이 경우에는 다음과 같은 명령에 에러가 발생할 수 있습니다.\n\n명령\n\n\nquarto preview --to bitPublish-pdf\n\n\n에러 메시지의 일부\n\n\nfinding package for STIXTwoText-Regular(-(Bold|Italic|Regular).*)?.\n\n1 package to install\ninstalling stix2-otf (1 of 1)\nERROR: tlmgr returned a non zero status code\n\n이러한 에러가 발생한 이유는 quarto 명령어로 bitPublish가 설치될 경우에는 _extensions/bit2r/bitPublish 경로로 extensions이 설치되지만, Github에서 파일을 다운로드해서 실치할 경우에는 _extensions/bitPublish 경로로 설치되기 때문입니다.\nbitPublish extensions은 _extensions/bit2r/bitPublish 디렉토리에 설치됨을 전제로 개발되었기 때문에 다운로드 설치 시 _extensions 디렉토리 안에 bit2r 디렉토리를 만들어서 현재의 _extensions/bitPublish 경로를 _extensions/bit2r/bitPublish 경로로 변경하면 문제가 해결됩니다."
  },
  {
    "objectID": "chap_version.html#version-0.1",
    "href": "chap_version.html#version-0.1",
    "title": "4  Version",
    "section": "4.1 version 0.1",
    "text": "4.1 version 0.1\n\n4.1.1 version 0.1.2\n\n2023-05-27\n예제 문서에 버전 정보를 담은 chapter 추가\n\nchap_version.qmd"
  },
  {
    "objectID": "chap_version.html#version-0.2",
    "href": "chap_version.html#version-0.2",
    "title": "4  Version",
    "section": "4.2 version 0.2",
    "text": "4.2 version 0.2\n\n4.2.1 version 0.2.0\n\n2023-06-01\npdf와 html에서 공통으로 작동하는 정보 블록 정의\n\ninfobox\n\ninformation, caution, warning, tip\n\n팬독 청크 이용\n\npdf와 html에서 공통으로 작동하는 이야기 블록 정의\n\nquote_block()\nR 함수 이용\n\n\n\n\n4.2.2 version 0.2.1\n\n2023-06-05\npdf와 html에서 공통으로 작동하는 타이틀 박스 블록 정의\n\nPDF\n\ntitlebox 명령\n\nHTML\n\ntitlebox 태그\n\n멀티 아웃 포맷\n\ntitlebox_block() 함수\n\n\n\n\n\n4.2.3 version 0.2.2\n\n2023-06-07\nTable 크로스-레퍼런스의 구현 (#31)\nHTML의 일부 크로스-레퍼런스 미적용 문제 및 Latex 패키지 로드 명령이 출력되는 문제 해결 (#29, thanks to youngjinkim81)\nchapter label을 LaTeX 형식 대신, 멀티 아웃 포맷을 위해서 마크다운 형식으로 변경\n\n\n\n4.2.4 version 0.2.3\n\n2023-06-11\n유니코드 인덱스를 처리하는 방법 개선\n\n초성을 기준으로 찾아보기 정상적으로 동작\nNot Yet\n\n예제 블록의 멀티 아웃 포맷 지원 (#36)\n\nQuarto에서 제공하는 정리(theorems)의 변형을 이용\n\n\n\n\n4.2.5 version 0.2.4\n\n2023-06-22\n유니코드 인덱스를 처리하는 방법 개선 (#32, #44 thanks to 이재호)\n\n초성을 기준으로 찾아보기 정상적으로 동작\n\n\n\n\n4.2.6 version 0.2.5\n\n2023-06-29\nHTML 아웃 포맷의 R 그래픽스 비정상 출력 문제 해결 (#30)\n\nragg 패키지 이용\n\n\n\n\n4.2.7 version 0.2.6\n\n2023-07-02\n참고문헌 reference.bib 출력 관련 이슈 해결 (#46)\n\nHTML 아웃 포맷에서 내용이 없는 참고문헌 chapter 출력문제 해결\n\nGithub 파일 다운로드로 설치 시의 파일경로 문제 해결 방법 제시 (#45)\n\n예제 문서의 Troubleshooting chapter에 기술\n\n\n\n\n4.2.8 version 0.2.7\n\n2023-07-07\ntable_with_caption() 오류 수정 (#49)\n\nPDF 아웃 포맷에서 테이블의 헤더(변수 이름)가 iris 변수 이름으로 출력되는 문제\n\n\n\n\n4.2.9 version 0.2.8\n\n2023-07-13\n연습문제 서식 개선 및 연습문제 해답 기능 추가 (#38)\n\n연습문제 헤더 사용자 정의 지원\n\n장(chapter) 레벨과 절(section) 레벨 중에서 선택\n연습문제 이름을 사용자가 정의 가능\n\n기본 이름은 “연습문제”이지만, “Exercise” 등으로 변경 가능\n\n\n예제 본문에 연습문제 및 연습문제 해답 사용방법 추가\n\n\n\n\n4.2.10 version 0.2.9\n\n2023-08-06\nHTML 아웃 포맷에서의 cover-image 사용 예제 추가 (#54)\n\n\n\n4.2.11 version 0.3.0\n\n2023-08-12\nHTML 아웃 포맷을 웹북으로 출판하기 위한 데모를 github pages에 deploy (#55)\n\nhttps://r2bit.com/bitPublish/\n\n판형 설정에서 용지크기를 46배판(B5)으로 설정 (#57)\n\n기존에는 용지의 크기가 국배판(A4)였음\n\ngeometry 패키지의 판형 설정 설명을 추가"
  }
]